
class Node():
    def __init__(self,value):
        self.value=value
        self.next= None


class LinkedList():
    def __init__(self):
        self.head= None
        self.tail=None
        self.length=0
    
    def append_to_beg(self,value):
        new_node= Node(value)
        if self.head== None:
            self.head= new_node
            self.tail= new_node
            self.length=1
        else:
            self.head.next= new_node
            self.tail= new_node
            self.length+=1
    
    def append_to_end(self,value):
        new_node= Node(value)
        new_node.next= self.head
        self.head=new_node

    def insert(self,index,value):
        new_node= Node(value)
       
        if index>= self.length:
            self.append_to_end(value)
        
        if index==0:
            self.append_to_beg(value)
       
        temp_node=self.head
        count_list=0
        if count_list== index-1:
            new_node.next=temp_node.next
            temp_node.next=new_node
            self.length+=1

        temp_node=temp_node.next
        count_list+=1

    def remove(self,index):
        if index>= self.length:
            print("wrong index out of range")
            return
        
        if index==0:
            self.head= self.head.next
            self.length-=1
            return
        
        temp_node= self.head
        i=0
        while i < index:
            if i==index-1:
                temp_node.next=temp_node.next.next
                self.length-=1

            temp_node=temp_node.next
            i+=1
        return

    def printlist(self):
        temp = self.head
        while temp != None:
            print(temp.value, end=' ') #end = ' ' end the output with space
            temp = temp.next
        print()
        print('Length = '+str(self.length))

    def reverse(self):
        prev= None
        self.tail= self.head
        while self.head!= None:
            now_going_back =self.head
            self.head= self.head.next
            now_going_back.next= prev
            prev= now_going_back
        self.head= now_going_back


list=LinkedList()
list.append_to_beg(10)
list.printlist()

list.append_to_beg(5)
list.printlist()

list.append_to_end(1)
list.printlist()

list.insert(2,99)
list.printlist()

list.insert(34,23)
list.printlist()

list.remove(5)
list.printlist()

list.reverse()
list.printlist()











